syntax = "proto3";
option java_multiple_files = true;
option java_generic_services = true;
option java_package = "web.service.newsfeed.rpc";
import "google/protobuf/timestamp.proto";

message GetNewsFeedRequest {
  string userId = 1;
}

message ChildComment {
  string userId = 1;
  string content = 2;
  string avatar = 3;
  string timeComment = 4;
}

message Comment {
  string userId = 1;
  string content = 2;
  string userAvatar = 3;
  string timeComment = 4;
  repeated ChildComment childComments = 5;
}

message Share {
  string id = 1;
  string userId = 2;
  string content = 3;
  string timeShare = 4;
}

message Post{
  string id = 1;
  string userId = 2;
  string content = 3;
  repeated Comment comments = 4;
  repeated string likes = 5;
  repeated Share shares = 6;
  string images = 7;
  string postTime = 8;
}

message GetNewsFeedResponse {
  repeated Post posts = 1;
}

message SaveNewPostResponse {
  string status = 1;
}

message LikeRequest {
  string userId = 1;
  string postId = 2;
}

message LikeResponse {
  string status = 1;
}

message ShareRequest {
  string userId = 1;
  string postId = 2;
  string content = 3;
}

message ShareResponse {
  string status = 1;
}

message CommentRequest {
  string userId = 1;
  string postId = 2;
  string content = 3;
}

message CommentResponse {
  string status = 1;
}

message TagRequest {
  string userId = 1;
  string postId = 2;
}

message TagResponse{
  string status = 1;
}

message GetNewsGroupRequest {
  string userId = 1;
}

message GetNewsGroupResponse {
  string newsgroup = 1;
}

message GetUserPostListRequest {
  string userId = 1;
}

message GetUserPostListResponse {
  repeated UserPotsInfo posts = 1;
}

message UserPotsInfo {
  string postId = 1;
  string image = 2;
}

service NewsFeedService {
  rpc getNewsFeed (GetNewsFeedRequest) returns (GetNewsFeedResponse);
  rpc saveNewPost (Post) returns (SaveNewPostResponse);
  rpc like (LikeRequest) returns (LikeResponse);
  rpc share (ShareRequest) returns (ShareResponse);
  rpc comment (CommentRequest) returns (CommentResponse);
  rpc tag (TagRequest) returns (TagResponse);
  rpc getNewsGroup (GetNewsGroupRequest) returns (GetNewsGroupResponse);
  rpc getFollower (GetUserPostListRequest) returns (GetUserPostListResponse);
  rpc getUserPostList (GetUserPostListRequest) returns (GetUserPostListResponse);
}


